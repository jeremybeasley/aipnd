!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Image	classifier.py	/^from PIL import Image$/;"	i
Variable	classifier.py	/^from torch.autograd import Variable$/;"	i
__version__	classifier.py	/^from torch import __version__$/;"	i
adjust_results4_isadog	adjust_results4_isadog.py	/^def adjust_results4_isadog(results_dic, dogfile):$/;"	f
adjust_results4_isadog	adjust_results4_isadog_hints.py	/^def adjust_results4_isadog(results_dic, dogfile):$/;"	f
adjust_results4_isadog	check_images.py	/^from adjust_results4_isadog import adjust_results4_isadog$/;"	i
alexnet	classifier.py	/^alexnet = models.alexnet(pretrained=True)$/;"	v
argparse	get_input_args.py	/^import argparse$/;"	i
argparse	get_input_args_hints.py	/^import argparse$/;"	i
ast	classifier.py	/^import ast$/;"	i
calculates_results_stats	calculates_results_stats.py	/^def calculates_results_stats(results_dic):$/;"	f
calculates_results_stats	calculates_results_stats_hints.py	/^def calculates_results_stats(results_dic):$/;"	f
calculates_results_stats	check_images.py	/^from calculates_results_stats import calculates_results_stats$/;"	i
check_calculating_results	print_functions_for_lab_checks.py	/^def check_calculating_results(results_dic, results_stats_dic):$/;"	f
check_classifying_images	print_functions_for_lab_checks.py	/^def check_classifying_images(results_dic):$/;"	f
check_classifying_labels_as_dogs	print_functions_for_lab_checks.py	/^def check_classifying_labels_as_dogs(results_dic):$/;"	f
check_command_line_arguments	print_functions_for_lab_checks.py	/^def check_command_line_arguments(in_arg):$/;"	f
check_creating_pet_image_labels	print_functions_for_lab_checks.py	/^def check_creating_pet_image_labels(results_dic):$/;"	f
classifier	classifier.py	/^def classifier(img_path, model_name):$/;"	f
classifier	classify_images.py	/^from classifier import classifier $/;"	i
classifier	classify_images_hints.py	/^from classifier import classifier $/;"	i
classifier	test_classifier.py	/^from classifier import classifier $/;"	i
classify_images	check_images.py	/^from classify_images import classify_images$/;"	i
classify_images	classify_images.py	/^def classify_images(images_dir, results_dic, model):$/;"	f
classify_images	classify_images_hints.py	/^def classify_images(images_dir, results_dic, model):$/;"	f
get_input_args	check_images.py	/^from get_input_args import get_input_args$/;"	i
get_input_args	get_input_args.py	/^def get_input_args():$/;"	f
get_input_args	get_input_args_hints.py	/^def get_input_args():$/;"	f
get_pet_labels	check_images.py	/^from get_pet_labels import get_pet_labels$/;"	i
get_pet_labels	get_pet_labels.py	/^def get_pet_labels(image_dir):$/;"	f
get_pet_labels	get_pet_labels_hints.py	/^def get_pet_labels(image_dir):$/;"	f
image_classification	test_classifier.py	/^image_classification = classifier(test_image, model)$/;"	v
imagenet_classes_dict	classifier.py	/^    imagenet_classes_dict = ast.literal_eval(imagenet_classes_file.read())$/;"	v
listdir	get_pet_labels.py	/^from os import listdir$/;"	i
listdir	get_pet_labels_hints.py	/^from os import listdir$/;"	i
main	check_images.py	/^def main():$/;"	f
model	test_classifier.py	/^model = "vgg"$/;"	v
models	classifier.py	/^import torchvision.models as models$/;"	i
models	classifier.py	/^models = {'resnet': resnet18, 'alexnet': alexnet, 'vgg': vgg16}$/;"	v
print_results	check_images.py	/^from print_results import print_results$/;"	i
print_results	print_results.py	/^def print_results(results_dic, results_stats_dic, model, $/;"	f
print_results	print_results_hints.py	/^def print_results(results_dic, results_stats_dic, model, $/;"	f
resnet18	classifier.py	/^resnet18 = models.resnet18(pretrained=True)$/;"	v
sleep	check_images.py	/^from time import time, sleep$/;"	i
test_image	test_classifier.py	/^test_image="pet_images\/Collie_03797.jpg"$/;"	v
time	check_images.py	/^from time import time, sleep$/;"	i
torchvision	classifier.py	/^import torchvision.models as models$/;"	i
torchvision	classifier.py	/^import torchvision.transforms as transforms$/;"	i
transforms	classifier.py	/^import torchvision.transforms as transforms$/;"	i
vgg16	classifier.py	/^vgg16 = models.vgg16(pretrained=True)$/;"	v
